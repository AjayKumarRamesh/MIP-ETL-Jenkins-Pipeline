# Root options
# INFO, WARN, ERROR
# add "file" to write to log file.
log4j.rootLogger=INFO, stdout, file

# To print to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} - %m%n

# Direct log messages to a log file
log4j.logger.file=file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=./logs/${sequence}.log
log4j.appender.file.MaxFileSize=50MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

log4j.logger.CRUDErrorLog= ERROR, CRUDErrorLog
log4j.appender.CRUDErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.CRUDErrorLog.File=./logs/${fName}.csv
log4j.appender.CRUDErrorLog.MaxFileSize=50MB
log4j.appender.CRUDErrorLog.MaxBackupIndex=10
log4j.appender.CRUDErrorLog.layout=org.apache.log4j.PatternLayout
log4j.appender.CRUDErrorLog.layout.ConversionPattern=%m%n

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
log4j.logger.org.apache.spark=WARN